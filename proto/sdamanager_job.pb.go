// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: sdamanager_job.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectionRequest_FinishCode int32

const (
	ConnectionRequest_NONE          ConnectionRequest_FinishCode = 0
	ConnectionRequest_COMPLETE      ConnectionRequest_FinishCode = 1
	ConnectionRequest_CANCEL        ConnectionRequest_FinishCode = 2
	ConnectionRequest_FORCE_CANCEL  ConnectionRequest_FinishCode = 3
	ConnectionRequest_SYSTEM_DOWN   ConnectionRequest_FinishCode = 4
	ConnectionRequest_ERROR         ConnectionRequest_FinishCode = 5
	ConnectionRequest_USER_ERROR    ConnectionRequest_FinishCode = 6
	ConnectionRequest_NOT_IMPLEMENT ConnectionRequest_FinishCode = 7
	ConnectionRequest_WORKER_ERROR  ConnectionRequest_FinishCode = 8
	ConnectionRequest_NOT_STARTED   ConnectionRequest_FinishCode = 9
	ConnectionRequest_EXPIRED       ConnectionRequest_FinishCode = 10
)

// Enum value maps for ConnectionRequest_FinishCode.
var (
	ConnectionRequest_FinishCode_name = map[int32]string{
		0:  "NONE",
		1:  "COMPLETE",
		2:  "CANCEL",
		3:  "FORCE_CANCEL",
		4:  "SYSTEM_DOWN",
		5:  "ERROR",
		6:  "USER_ERROR",
		7:  "NOT_IMPLEMENT",
		8:  "WORKER_ERROR",
		9:  "NOT_STARTED",
		10: "EXPIRED",
	}
	ConnectionRequest_FinishCode_value = map[string]int32{
		"NONE":          0,
		"COMPLETE":      1,
		"CANCEL":        2,
		"FORCE_CANCEL":  3,
		"SYSTEM_DOWN":   4,
		"ERROR":         5,
		"USER_ERROR":    6,
		"NOT_IMPLEMENT": 7,
		"WORKER_ERROR":  8,
		"NOT_STARTED":   9,
		"EXPIRED":       10,
	}
)

func (x ConnectionRequest_FinishCode) Enum() *ConnectionRequest_FinishCode {
	p := new(ConnectionRequest_FinishCode)
	*p = x
	return p
}

func (x ConnectionRequest_FinishCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionRequest_FinishCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sdamanager_job_proto_enumTypes[0].Descriptor()
}

func (ConnectionRequest_FinishCode) Type() protoreflect.EnumType {
	return &file_sdamanager_job_proto_enumTypes[0]
}

func (x ConnectionRequest_FinishCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionRequest_FinishCode.Descriptor instead.
func (ConnectionRequest_FinishCode) EnumDescriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{0, 0}
}

type ConnectionResponse_ResponseCode int32

const (
	ConnectionResponse_NONE                   ConnectionResponse_ResponseCode = 0
	ConnectionResponse_SUCCESS                ConnectionResponse_ResponseCode = 1
	ConnectionResponse_INVALID_TOKEN          ConnectionResponse_ResponseCode = 2
	ConnectionResponse_TOKEN_IN_USE           ConnectionResponse_ResponseCode = 3
	ConnectionResponse_NOT_ENOUGH_GPU         ConnectionResponse_ResponseCode = 4
	ConnectionResponse_INTERNAL_ERROR         ConnectionResponse_ResponseCode = 5
	ConnectionResponse_VERSION_MISMATCH       ConnectionResponse_ResponseCode = 6
	ConnectionResponse_PREPARE_WORKER         ConnectionResponse_ResponseCode = 7
	ConnectionResponse_FAILURE_PREPARE_WORKER ConnectionResponse_ResponseCode = 8
	ConnectionResponse_UNSUPPORTED_VERSION    ConnectionResponse_ResponseCode = 9
	ConnectionResponse_UNSUPPORTED_SDAMODEL   ConnectionResponse_ResponseCode = 11
	ConnectionResponse_NOT_EXIST_SDA          ConnectionResponse_ResponseCode = 12
	ConnectionResponse_ACCESS_LEVEL           ConnectionResponse_ResponseCode = 13
	ConnectionResponse_NO_FAULT_TOLERANCE     ConnectionResponse_ResponseCode = 14
)

// Enum value maps for ConnectionResponse_ResponseCode.
var (
	ConnectionResponse_ResponseCode_name = map[int32]string{
		0:  "NONE",
		1:  "SUCCESS",
		2:  "INVALID_TOKEN",
		3:  "TOKEN_IN_USE",
		4:  "NOT_ENOUGH_GPU",
		5:  "INTERNAL_ERROR",
		6:  "VERSION_MISMATCH",
		7:  "PREPARE_WORKER",
		8:  "FAILURE_PREPARE_WORKER",
		9:  "UNSUPPORTED_VERSION",
		11: "UNSUPPORTED_SDAMODEL",
		12: "NOT_EXIST_SDA",
		13: "ACCESS_LEVEL",
		14: "NO_FAULT_TOLERANCE",
	}
	ConnectionResponse_ResponseCode_value = map[string]int32{
		"NONE":                   0,
		"SUCCESS":                1,
		"INVALID_TOKEN":          2,
		"TOKEN_IN_USE":           3,
		"NOT_ENOUGH_GPU":         4,
		"INTERNAL_ERROR":         5,
		"VERSION_MISMATCH":       6,
		"PREPARE_WORKER":         7,
		"FAILURE_PREPARE_WORKER": 8,
		"UNSUPPORTED_VERSION":    9,
		"UNSUPPORTED_SDAMODEL":   11,
		"NOT_EXIST_SDA":          12,
		"ACCESS_LEVEL":           13,
		"NO_FAULT_TOLERANCE":     14,
	}
)

func (x ConnectionResponse_ResponseCode) Enum() *ConnectionResponse_ResponseCode {
	p := new(ConnectionResponse_ResponseCode)
	*p = x
	return p
}

func (x ConnectionResponse_ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionResponse_ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sdamanager_job_proto_enumTypes[1].Descriptor()
}

func (ConnectionResponse_ResponseCode) Type() protoreflect.EnumType {
	return &file_sdamanager_job_proto_enumTypes[1]
}

func (x ConnectionResponse_ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionResponse_ResponseCode.Descriptor instead.
func (ConnectionResponse_ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{1, 0}
}

type FinishStatus_Code int32

const (
	FinishStatus_NONE           FinishStatus_Code = 0
	FinishStatus_COMPLETED      FinishStatus_Code = 1
	FinishStatus_CANCELED       FinishStatus_Code = 2
	FinishStatus_FORCE_CANCELED FinishStatus_Code = 3
	FinishStatus_SYSTEM_DOWN    FinishStatus_Code = 4
	FinishStatus_ERROR          FinishStatus_Code = 5
	FinishStatus_USER_ERROR     FinishStatus_Code = 6
	FinishStatus_NOT_IMPLEMENT  FinishStatus_Code = 7
	FinishStatus_WORKER_ERROR   FinishStatus_Code = 8
	FinishStatus_NOT_STARTED    FinishStatus_Code = 9
	FinishStatus_EXPIRED        FinishStatus_Code = 10
	FinishStatus_RECOVERY       FinishStatus_Code = 11
)

// Enum value maps for FinishStatus_Code.
var (
	FinishStatus_Code_name = map[int32]string{
		0:  "NONE",
		1:  "COMPLETED",
		2:  "CANCELED",
		3:  "FORCE_CANCELED",
		4:  "SYSTEM_DOWN",
		5:  "ERROR",
		6:  "USER_ERROR",
		7:  "NOT_IMPLEMENT",
		8:  "WORKER_ERROR",
		9:  "NOT_STARTED",
		10: "EXPIRED",
		11: "RECOVERY",
	}
	FinishStatus_Code_value = map[string]int32{
		"NONE":           0,
		"COMPLETED":      1,
		"CANCELED":       2,
		"FORCE_CANCELED": 3,
		"SYSTEM_DOWN":    4,
		"ERROR":          5,
		"USER_ERROR":     6,
		"NOT_IMPLEMENT":  7,
		"WORKER_ERROR":   8,
		"NOT_STARTED":    9,
		"EXPIRED":        10,
		"RECOVERY":       11,
	}
)

func (x FinishStatus_Code) Enum() *FinishStatus_Code {
	p := new(FinishStatus_Code)
	*p = x
	return p
}

func (x FinishStatus_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FinishStatus_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_sdamanager_job_proto_enumTypes[2].Descriptor()
}

func (FinishStatus_Code) Type() protoreflect.EnumType {
	return &file_sdamanager_job_proto_enumTypes[2]
}

func (x FinishStatus_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FinishStatus_Code.Descriptor instead.
func (FinishStatus_Code) EnumDescriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{5, 0}
}

type ConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version     string                       `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Token       *Token                       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	FrontendId  int32                        `protobuf:"varint,3,opt,name=frontend_id,json=frontendId,proto3" json:"frontend_id,omitempty"`
	Pid         int32                        `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	ProcessName string                       `protobuf:"bytes,5,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	Code        ConnectionRequest_FinishCode `protobuf:"varint,6,opt,name=code,proto3,enum=moreh.sdamanager.ConnectionRequest_FinishCode" json:"code,omitempty"`
	IpAddr      string                       `protobuf:"bytes,7,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	// Deprecated: Do not use.
	UseHeartbeat   bool     `protobuf:"varint,8,opt,name=use_heartbeat,json=useHeartbeat,proto3" json:"use_heartbeat,omitempty"`
	SdaIdx         *Integer `protobuf:"bytes,9,opt,name=sda_idx,json=sdaIdx,proto3" json:"sda_idx,omitempty"`
	ClientInfo     string   `protobuf:"bytes,10,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	UseMoreh       bool     `protobuf:"varint,11,opt,name=use_moreh,json=useMoreh,proto3" json:"use_moreh,omitempty"`
	FaultTolerance bool     `protobuf:"varint,12,opt,name=fault_tolerance,json=faultTolerance,proto3" json:"fault_tolerance,omitempty"`
}

func (x *ConnectionRequest) Reset() {
	*x = ConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest) ProtoMessage() {}

func (x *ConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectionRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConnectionRequest) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ConnectionRequest) GetFrontendId() int32 {
	if x != nil {
		return x.FrontendId
	}
	return 0
}

func (x *ConnectionRequest) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ConnectionRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *ConnectionRequest) GetCode() ConnectionRequest_FinishCode {
	if x != nil {
		return x.Code
	}
	return ConnectionRequest_NONE
}

func (x *ConnectionRequest) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

// Deprecated: Do not use.
func (x *ConnectionRequest) GetUseHeartbeat() bool {
	if x != nil {
		return x.UseHeartbeat
	}
	return false
}

func (x *ConnectionRequest) GetSdaIdx() *Integer {
	if x != nil {
		return x.SdaIdx
	}
	return nil
}

func (x *ConnectionRequest) GetClientInfo() string {
	if x != nil {
		return x.ClientInfo
	}
	return ""
}

func (x *ConnectionRequest) GetUseMoreh() bool {
	if x != nil {
		return x.UseMoreh
	}
	return false
}

func (x *ConnectionRequest) GetFaultTolerance() bool {
	if x != nil {
		return x.FaultTolerance
	}
	return false
}

type ConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                  ConnectionResponse_ResponseCode `protobuf:"varint,1,opt,name=code,proto3,enum=moreh.sdamanager.ConnectionResponse_ResponseCode" json:"code,omitempty"`
	Version               string                          `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Pid                   int32                           `protobuf:"varint,3,opt,name=pid,proto3" json:"pid,omitempty"`
	ProcessName           string                          `protobuf:"bytes,4,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	FrontendId            int32                           `protobuf:"varint,5,opt,name=frontend_id,json=frontendId,proto3" json:"frontend_id,omitempty"`
	AccessLevel           int32                           `protobuf:"varint,6,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"`
	FaultToleranceEnvList *EnvironmentVariableList        `protobuf:"bytes,7,opt,name=fault_tolerance_env_list,json=faultToleranceEnvList,proto3" json:"fault_tolerance_env_list,omitempty"`
}

func (x *ConnectionResponse) Reset() {
	*x = ConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse) ProtoMessage() {}

func (x *ConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectionResponse) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionResponse) GetCode() ConnectionResponse_ResponseCode {
	if x != nil {
		return x.Code
	}
	return ConnectionResponse_NONE
}

func (x *ConnectionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ConnectionResponse) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ConnectionResponse) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *ConnectionResponse) GetFrontendId() int32 {
	if x != nil {
		return x.FrontendId
	}
	return 0
}

func (x *ConnectionResponse) GetAccessLevel() int32 {
	if x != nil {
		return x.AccessLevel
	}
	return 0
}

func (x *ConnectionResponse) GetFaultToleranceEnvList() *EnvironmentVariableList {
	if x != nil {
		return x.FaultToleranceEnvList
	}
	return nil
}

type PlatformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrontendId int32         `protobuf:"varint,1,opt,name=frontend_id,json=frontendId,proto3" json:"frontend_id,omitempty"`
	Sdalist    []*ConnectSDA `protobuf:"bytes,2,rep,name=sdalist,proto3" json:"sdalist,omitempty"`
}

func (x *PlatformResponse) Reset() {
	*x = PlatformResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformResponse) ProtoMessage() {}

func (x *PlatformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformResponse.ProtoReflect.Descriptor instead.
func (*PlatformResponse) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{2}
}

func (x *PlatformResponse) GetFrontendId() int32 {
	if x != nil {
		return x.FrontendId
	}
	return 0
}

func (x *PlatformResponse) GetSdalist() []*ConnectSDA {
	if x != nil {
		return x.Sdalist
	}
	return nil
}

type PlatformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Token token = 1;     erase and reuse 1 when 1.0.2 version not used
	FrontendId int32 `protobuf:"varint,2,opt,name=frontend_id,json=frontendId,proto3" json:"frontend_id,omitempty"`
	ComptIdx   bool  `protobuf:"varint,3,opt,name=compt_idx,json=comptIdx,proto3" json:"compt_idx,omitempty"` // device real index
}

func (x *PlatformRequest) Reset() {
	*x = PlatformRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformRequest) ProtoMessage() {}

func (x *PlatformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformRequest.ProtoReflect.Descriptor instead.
func (*PlatformRequest) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{3}
}

func (x *PlatformRequest) GetFrontendId() int32 {
	if x != nil {
		return x.FrontendId
	}
	return 0
}

func (x *PlatformRequest) GetComptIdx() bool {
	if x != nil {
		return x.ComptIdx
	}
	return false
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  bool   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{4}
}

func (x *HeartbeatResponse) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *HeartbeatResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FinishStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinishStatus) Reset() {
	*x = FinishStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishStatus) ProtoMessage() {}

func (x *FinishStatus) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishStatus.ProtoReflect.Descriptor instead.
func (*FinishStatus) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{5}
}

type DisconnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrontendId int32             `protobuf:"varint,1,opt,name=frontend_id,json=frontendId,proto3" json:"frontend_id,omitempty"`
	Code       FinishStatus_Code `protobuf:"varint,2,opt,name=code,proto3,enum=moreh.sdamanager.FinishStatus_Code" json:"code,omitempty"`
}

func (x *DisconnectRequest) Reset() {
	*x = DisconnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRequest) ProtoMessage() {}

func (x *DisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRequest.ProtoReflect.Descriptor instead.
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{6}
}

func (x *DisconnectRequest) GetFrontendId() int32 {
	if x != nil {
		return x.FrontendId
	}
	return 0
}

func (x *DisconnectRequest) GetCode() FinishStatus_Code {
	if x != nil {
		return x.Code
	}
	return FinishStatus_NONE
}

type DisconnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code FinishStatus_Code `protobuf:"varint,1,opt,name=code,proto3,enum=moreh.sdamanager.FinishStatus_Code" json:"code,omitempty"`
}

func (x *DisconnectResponse) Reset() {
	*x = DisconnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_job_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectResponse) ProtoMessage() {}

func (x *DisconnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_job_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectResponse.ProtoReflect.Descriptor instead.
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return file_sdamanager_job_proto_rawDescGZIP(), []int{7}
}

func (x *DisconnectResponse) GetCode() FinishStatus_Code {
	if x != nil {
		return x.Code
	}
	return FinishStatus_NONE
}

var File_sdamanager_job_proto protoreflect.FileDescriptor

var file_sdamanager_job_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64,
	0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x17, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x87, 0x05, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x27, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x07,
	0x73, 0x64, 0x61, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x06, 0x73, 0x64, 0x61, 0x49, 0x64, 0x78,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x73, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x68, 0x12, 0x27,
	0x0a, 0x0f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f,
	0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x4f,
	0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f,
	0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x57,
	0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x0f, 0x0a,
	0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x09, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x0a, 0x22, 0xfd, 0x04, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x31, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x62, 0x0a, 0x18,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x65, 0x6e, 0x76, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x15, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0xa8, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x03, 0x12, 0x12, 0x0a,
	0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x47, 0x50, 0x55, 0x10,
	0x04, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x50,
	0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x10, 0x07, 0x12,
	0x1a, 0x0a, 0x16, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41,
	0x52, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x55,
	0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49,
	0x4f, 0x4e, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x5f, 0x53, 0x44, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x0b, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x44, 0x41, 0x10,
	0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x4c, 0x45, 0x56, 0x45,
	0x4c, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x4f, 0x5f, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f,
	0x54, 0x4f, 0x4c, 0x45, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x0e, 0x22, 0x6b, 0x0a, 0x10, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x07, 0x73, 0x64, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x53, 0x44, 0x41, 0x52,
	0x07, 0x73, 0x64, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x78, 0x22, 0x41, 0x0a, 0x11, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcf, 0x01, 0x0a,
	0x0c, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbe, 0x01,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x4f, 0x57, 0x4e,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x0e, 0x0a,
	0x0a, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x11, 0x0a,
	0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x07,
	0x12, 0x10, 0x0a, 0x0c, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x0a,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x10, 0x0b, 0x22, 0x6d,
	0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a,
	0x12, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0xe5, 0x02, 0x0a,
	0x06, 0x4a, 0x6f, 0x62, 0x41, 0x50, 0x49, 0x12, 0x57, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4a, 0x6f, 0x62, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68,
	0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x21, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x4a, 0x6f, 0x62, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64,
	0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x6f, 0x72,
	0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12,
	0x1c, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x1a, 0x23, 0x2e,
	0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x69, 0x6f,
	0x2f, 0x67, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdamanager_job_proto_rawDescOnce sync.Once
	file_sdamanager_job_proto_rawDescData = file_sdamanager_job_proto_rawDesc
)

func file_sdamanager_job_proto_rawDescGZIP() []byte {
	file_sdamanager_job_proto_rawDescOnce.Do(func() {
		file_sdamanager_job_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdamanager_job_proto_rawDescData)
	})
	return file_sdamanager_job_proto_rawDescData
}

var file_sdamanager_job_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sdamanager_job_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_sdamanager_job_proto_goTypes = []interface{}{
	(ConnectionRequest_FinishCode)(0),    // 0: moreh.sdamanager.ConnectionRequest.FinishCode
	(ConnectionResponse_ResponseCode)(0), // 1: moreh.sdamanager.ConnectionResponse.ResponseCode
	(FinishStatus_Code)(0),               // 2: moreh.sdamanager.FinishStatus.Code
	(*ConnectionRequest)(nil),            // 3: moreh.sdamanager.ConnectionRequest
	(*ConnectionResponse)(nil),           // 4: moreh.sdamanager.ConnectionResponse
	(*PlatformResponse)(nil),             // 5: moreh.sdamanager.PlatformResponse
	(*PlatformRequest)(nil),              // 6: moreh.sdamanager.PlatformRequest
	(*HeartbeatResponse)(nil),            // 7: moreh.sdamanager.HeartbeatResponse
	(*FinishStatus)(nil),                 // 8: moreh.sdamanager.FinishStatus
	(*DisconnectRequest)(nil),            // 9: moreh.sdamanager.DisconnectRequest
	(*DisconnectResponse)(nil),           // 10: moreh.sdamanager.DisconnectResponse
	(*Token)(nil),                        // 11: moreh.sdamanager.Token
	(*Integer)(nil),                      // 12: moreh.sdamanager.Integer
	(*EnvironmentVariableList)(nil),      // 13: moreh.sdamanager.EnvironmentVariableList
	(*ConnectSDA)(nil),                   // 14: moreh.sdamanager.ConnectSDA
	(*FrontendID)(nil),                   // 15: moreh.sdamanager.FrontendID
}
var file_sdamanager_job_proto_depIdxs = []int32{
	11, // 0: moreh.sdamanager.ConnectionRequest.token:type_name -> moreh.sdamanager.Token
	0,  // 1: moreh.sdamanager.ConnectionRequest.code:type_name -> moreh.sdamanager.ConnectionRequest.FinishCode
	12, // 2: moreh.sdamanager.ConnectionRequest.sda_idx:type_name -> moreh.sdamanager.Integer
	1,  // 3: moreh.sdamanager.ConnectionResponse.code:type_name -> moreh.sdamanager.ConnectionResponse.ResponseCode
	13, // 4: moreh.sdamanager.ConnectionResponse.fault_tolerance_env_list:type_name -> moreh.sdamanager.EnvironmentVariableList
	14, // 5: moreh.sdamanager.PlatformResponse.sdalist:type_name -> moreh.sdamanager.ConnectSDA
	2,  // 6: moreh.sdamanager.DisconnectRequest.code:type_name -> moreh.sdamanager.FinishStatus.Code
	2,  // 7: moreh.sdamanager.DisconnectResponse.code:type_name -> moreh.sdamanager.FinishStatus.Code
	3,  // 8: moreh.sdamanager.JobAPI.StartJob:input_type -> moreh.sdamanager.ConnectionRequest
	6,  // 9: moreh.sdamanager.JobAPI.GetPlatform:input_type -> moreh.sdamanager.PlatformRequest
	9,  // 10: moreh.sdamanager.JobAPI.FinishJob:input_type -> moreh.sdamanager.DisconnectRequest
	15, // 11: moreh.sdamanager.JobAPI.Heartbeat:input_type -> moreh.sdamanager.FrontendID
	4,  // 12: moreh.sdamanager.JobAPI.StartJob:output_type -> moreh.sdamanager.ConnectionResponse
	5,  // 13: moreh.sdamanager.JobAPI.GetPlatform:output_type -> moreh.sdamanager.PlatformResponse
	10, // 14: moreh.sdamanager.JobAPI.FinishJob:output_type -> moreh.sdamanager.DisconnectResponse
	7,  // 15: moreh.sdamanager.JobAPI.Heartbeat:output_type -> moreh.sdamanager.HeartbeatResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_sdamanager_job_proto_init() }
func file_sdamanager_job_proto_init() {
	if File_sdamanager_job_proto != nil {
		return
	}
	file_sdamanager_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sdamanager_job_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_job_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_job_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_job_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_job_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_job_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_job_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_job_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdamanager_job_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sdamanager_job_proto_goTypes,
		DependencyIndexes: file_sdamanager_job_proto_depIdxs,
		EnumInfos:         file_sdamanager_job_proto_enumTypes,
		MessageInfos:      file_sdamanager_job_proto_msgTypes,
	}.Build()
	File_sdamanager_job_proto = out.File
	file_sdamanager_job_proto_rawDesc = nil
	file_sdamanager_job_proto_goTypes = nil
	file_sdamanager_job_proto_depIdxs = nil
}
