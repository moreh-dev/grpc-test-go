// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: sdamanager_common.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseCode int32

const (
	ResponseCode_NONE                ResponseCode = 0
	ResponseCode_SUCCESS             ResponseCode = 1
	ResponseCode_INVALID_TOKEN       ResponseCode = 2
	ResponseCode_TOKEN_IN_USE        ResponseCode = 3
	ResponseCode_NOT_ENOUGH_GPU      ResponseCode = 4
	ResponseCode_INTERNAL_ERROR      ResponseCode = 5
	ResponseCode_INVALID_ARGUMENT    ResponseCode = 6
	ResponseCode_DUPLICATE_VALUE     ResponseCode = 7
	ResponseCode_FAILED_CONNECT      ResponseCode = 8
	ResponseCode_EXIST_SDA           ResponseCode = 9
	ResponseCode_NOT_EXIST_SDA       ResponseCode = 10
	ResponseCode_NOT_RUNNING         ResponseCode = 11
	ResponseCode_NOT_QUEUED          ResponseCode = 12
	ResponseCode_INVALID_JOBID       ResponseCode = 13
	ResponseCode_DEVICE_IN_USE       ResponseCode = 14
	ResponseCode_NOT_FOUND           ResponseCode = 15
	ResponseCode_EXIST_MEMBER        ResponseCode = 16
	ResponseCode_NOT_HAVE_PERMISSION ResponseCode = 17
	ResponseCode_NOT_SUPPORTED       ResponseCode = 18
	ResponseCode_JOB_EXIST           ResponseCode = 19
	ResponseCode_SDA_IS_FULL         ResponseCode = 20
	ResponseCode_SDA_IN_USE          ResponseCode = 21
	ResponseCode_SDA_IS_CURRENT      ResponseCode = 22
	// Deprecated: Do not use.
	ResponseCode_IS_RESERVED_SDA      ResponseCode = 23
	ResponseCode_IS_MULTI_SDA         ResponseCode = 24
	ResponseCode_IS_DUPLICABLE_TOKEN  ResponseCode = 25
	ResponseCode_EXIST_DUPLICABLE_JOB ResponseCode = 26
	ResponseCode_SDAMODEL_IN_USE      ResponseCode = 27
)

// Enum value maps for ResponseCode.
var (
	ResponseCode_name = map[int32]string{
		0:  "NONE",
		1:  "SUCCESS",
		2:  "INVALID_TOKEN",
		3:  "TOKEN_IN_USE",
		4:  "NOT_ENOUGH_GPU",
		5:  "INTERNAL_ERROR",
		6:  "INVALID_ARGUMENT",
		7:  "DUPLICATE_VALUE",
		8:  "FAILED_CONNECT",
		9:  "EXIST_SDA",
		10: "NOT_EXIST_SDA",
		11: "NOT_RUNNING",
		12: "NOT_QUEUED",
		13: "INVALID_JOBID",
		14: "DEVICE_IN_USE",
		15: "NOT_FOUND",
		16: "EXIST_MEMBER",
		17: "NOT_HAVE_PERMISSION",
		18: "NOT_SUPPORTED",
		19: "JOB_EXIST",
		20: "SDA_IS_FULL",
		21: "SDA_IN_USE",
		22: "SDA_IS_CURRENT",
		23: "IS_RESERVED_SDA",
		24: "IS_MULTI_SDA",
		25: "IS_DUPLICABLE_TOKEN",
		26: "EXIST_DUPLICABLE_JOB",
		27: "SDAMODEL_IN_USE",
	}
	ResponseCode_value = map[string]int32{
		"NONE":                 0,
		"SUCCESS":              1,
		"INVALID_TOKEN":        2,
		"TOKEN_IN_USE":         3,
		"NOT_ENOUGH_GPU":       4,
		"INTERNAL_ERROR":       5,
		"INVALID_ARGUMENT":     6,
		"DUPLICATE_VALUE":      7,
		"FAILED_CONNECT":       8,
		"EXIST_SDA":            9,
		"NOT_EXIST_SDA":        10,
		"NOT_RUNNING":          11,
		"NOT_QUEUED":           12,
		"INVALID_JOBID":        13,
		"DEVICE_IN_USE":        14,
		"NOT_FOUND":            15,
		"EXIST_MEMBER":         16,
		"NOT_HAVE_PERMISSION":  17,
		"NOT_SUPPORTED":        18,
		"JOB_EXIST":            19,
		"SDA_IS_FULL":          20,
		"SDA_IN_USE":           21,
		"SDA_IS_CURRENT":       22,
		"IS_RESERVED_SDA":      23,
		"IS_MULTI_SDA":         24,
		"IS_DUPLICABLE_TOKEN":  25,
		"EXIST_DUPLICABLE_JOB": 26,
		"SDAMODEL_IN_USE":      27,
	}
)

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sdamanager_common_proto_enumTypes[0].Descriptor()
}

func (ResponseCode) Type() protoreflect.EnumType {
	return &file_sdamanager_common_proto_enumTypes[0]
}

func (x ResponseCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseCode.Descriptor instead.
func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{0}
}

type GroupType int32

const (
	GroupType_BACKEND    GroupType = 0
	GroupType_SDA_MODEL  GroupType = 1
	GroupType_USER       GroupType = 2
	GroupType_MEMBERSHIP GroupType = 3
)

// Enum value maps for GroupType.
var (
	GroupType_name = map[int32]string{
		0: "BACKEND",
		1: "SDA_MODEL",
		2: "USER",
		3: "MEMBERSHIP",
	}
	GroupType_value = map[string]int32{
		"BACKEND":    0,
		"SDA_MODEL":  1,
		"USER":       2,
		"MEMBERSHIP": 3,
	}
)

func (x GroupType) Enum() *GroupType {
	p := new(GroupType)
	*p = x
	return p
}

func (x GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_sdamanager_common_proto_enumTypes[1].Descriptor()
}

func (GroupType) Type() protoreflect.EnumType {
	return &file_sdamanager_common_proto_enumTypes[1]
}

func (x GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupType.Descriptor instead.
func (GroupType) EnumDescriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{1}
}

type ServerModule int32

const (
	ServerModule_NONE_MODULE           ServerModule = 0
	ServerModule_MOREH_SDAMANAGER_API  ServerModule = 1
	ServerModule_MOREH_SDAMANAGER_CORE ServerModule = 2
	ServerModule_MOREH_SDAMANAGER_SCHD ServerModule = 3
	ServerModule_MOREH_WORKER_AGENT    ServerModule = 4
)

// Enum value maps for ServerModule.
var (
	ServerModule_name = map[int32]string{
		0: "NONE_MODULE",
		1: "MOREH_SDAMANAGER_API",
		2: "MOREH_SDAMANAGER_CORE",
		3: "MOREH_SDAMANAGER_SCHD",
		4: "MOREH_WORKER_AGENT",
	}
	ServerModule_value = map[string]int32{
		"NONE_MODULE":           0,
		"MOREH_SDAMANAGER_API":  1,
		"MOREH_SDAMANAGER_CORE": 2,
		"MOREH_SDAMANAGER_SCHD": 3,
		"MOREH_WORKER_AGENT":    4,
	}
)

func (x ServerModule) Enum() *ServerModule {
	p := new(ServerModule)
	*p = x
	return p
}

func (x ServerModule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerModule) Descriptor() protoreflect.EnumDescriptor {
	return file_sdamanager_common_proto_enumTypes[2].Descriptor()
}

func (ServerModule) Type() protoreflect.EnumType {
	return &file_sdamanager_common_proto_enumTypes[2]
}

func (x ServerModule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerModule.Descriptor instead.
func (ServerModule) EnumDescriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{2}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{0}
}

type Boolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Boolean) Reset() {
	*x = Boolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boolean) ProtoMessage() {}

func (x *Boolean) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boolean.ProtoReflect.Descriptor instead.
func (*Boolean) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{1}
}

func (x *Boolean) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Integer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Integer) Reset() {
	*x = Integer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integer) ProtoMessage() {}

func (x *Integer) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integer.ProtoReflect.Descriptor instead.
func (*Integer) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{2}
}

func (x *Integer) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type StdoutMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StdoutMessage) Reset() {
	*x = StdoutMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdoutMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdoutMessage) ProtoMessage() {}

func (x *StdoutMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdoutMessage.ProtoReflect.Descriptor instead.
func (*StdoutMessage) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{3}
}

func (x *StdoutMessage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConnectedCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ConnectedCount) Reset() {
	*x = ConnectedCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedCount) ProtoMessage() {}

func (x *ConnectedCount) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedCount.ProtoReflect.Descriptor instead.
func (*ConnectedCount) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectedCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ShutdownKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key int32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ShutdownKey) Reset() {
	*x = ShutdownKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownKey) ProtoMessage() {}

func (x *ShutdownKey) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownKey.ProtoReflect.Descriptor instead.
func (*ShutdownKey) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{5}
}

func (x *ShutdownKey) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

type Priority struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Priority) Reset() {
	*x = Priority{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Priority) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Priority) ProtoMessage() {}

func (x *Priority) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Priority.ProtoReflect.Descriptor instead.
func (*Priority) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{6}
}

func (x *Priority) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value        string                   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Description  string                   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Priority     *Priority                `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`
	CurrentSdaId int32                    `protobuf:"varint,5,opt,name=current_sda_id,json=currentSdaId,proto3" json:"current_sda_id,omitempty"`
	MaxSdaCount  int32                    `protobuf:"varint,6,opt,name=max_sda_count,json=maxSdaCount,proto3" json:"max_sda_count,omitempty"`
	EnvvarList   *EnvironmentVariableList `protobuf:"bytes,7,opt,name=envvar_list,json=envvarList,proto3" json:"envvar_list,omitempty"`
	AccessLevel  string                   `protobuf:"bytes,8,opt,name=access_level,json=accessLevel,proto3" json:"access_level,omitempty"`
	// Deprecated: Do not use.
	WorkingDirectory string `protobuf:"bytes,9,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	// Deprecated: Do not use.
	WorkerCommand string `protobuf:"bytes,10,opt,name=worker_command,json=workerCommand,proto3" json:"worker_command,omitempty"`
	// Deprecated: Do not use.
	WorkerQueryCommand string `protobuf:"bytes,11,opt,name=worker_query_command,json=workerQueryCommand,proto3" json:"worker_query_command,omitempty"`
	// Deprecated: Do not use.
	HealthCheckCommand    string                   `protobuf:"bytes,12,opt,name=health_check_command,json=healthCheckCommand,proto3" json:"health_check_command,omitempty"`
	MaxDuplicates         *Integer                 `protobuf:"bytes,13,opt,name=max_duplicates,json=maxDuplicates,proto3" json:"max_duplicates,omitempty"`
	FaultTolerance        *Boolean                 `protobuf:"bytes,14,opt,name=fault_tolerance,json=faultTolerance,proto3" json:"fault_tolerance,omitempty"`
	FaultToleranceEnvList *EnvironmentVariableList `protobuf:"bytes,15,opt,name=fault_tolerance_env_list,json=faultToleranceEnvList,proto3" json:"fault_tolerance_env_list,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{7}
}

func (x *Token) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Token) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Token) GetPriority() *Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *Token) GetCurrentSdaId() int32 {
	if x != nil {
		return x.CurrentSdaId
	}
	return 0
}

func (x *Token) GetMaxSdaCount() int32 {
	if x != nil {
		return x.MaxSdaCount
	}
	return 0
}

func (x *Token) GetEnvvarList() *EnvironmentVariableList {
	if x != nil {
		return x.EnvvarList
	}
	return nil
}

func (x *Token) GetAccessLevel() string {
	if x != nil {
		return x.AccessLevel
	}
	return ""
}

// Deprecated: Do not use.
func (x *Token) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

// Deprecated: Do not use.
func (x *Token) GetWorkerCommand() string {
	if x != nil {
		return x.WorkerCommand
	}
	return ""
}

// Deprecated: Do not use.
func (x *Token) GetWorkerQueryCommand() string {
	if x != nil {
		return x.WorkerQueryCommand
	}
	return ""
}

// Deprecated: Do not use.
func (x *Token) GetHealthCheckCommand() string {
	if x != nil {
		return x.HealthCheckCommand
	}
	return ""
}

func (x *Token) GetMaxDuplicates() *Integer {
	if x != nil {
		return x.MaxDuplicates
	}
	return nil
}

func (x *Token) GetFaultTolerance() *Boolean {
	if x != nil {
		return x.FaultTolerance
	}
	return nil
}

func (x *Token) GetFaultToleranceEnvList() *EnvironmentVariableList {
	if x != nil {
		return x.FaultToleranceEnvList
	}
	return nil
}

type FrontendID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrontendId int32 `protobuf:"varint,1,opt,name=frontend_id,json=frontendId,proto3" json:"frontend_id,omitempty"`
}

func (x *FrontendID) Reset() {
	*x = FrontendID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendID) ProtoMessage() {}

func (x *FrontendID) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendID.ProtoReflect.Descriptor instead.
func (*FrontendID) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{8}
}

func (x *FrontendID) GetFrontendId() int32 {
	if x != nil {
		return x.FrontendId
	}
	return 0
}

type EnvironmentVariableList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envvar []*EnvironmentVariable `protobuf:"bytes,1,rep,name=envvar,proto3" json:"envvar,omitempty"`
}

func (x *EnvironmentVariableList) Reset() {
	*x = EnvironmentVariableList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentVariableList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentVariableList) ProtoMessage() {}

func (x *EnvironmentVariableList) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentVariableList.ProtoReflect.Descriptor instead.
func (*EnvironmentVariableList) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{9}
}

func (x *EnvironmentVariableList) GetEnvvar() []*EnvironmentVariable {
	if x != nil {
		return x.Envvar
	}
	return nil
}

type EnvironmentVariable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EnvironmentVariable) Reset() {
	*x = EnvironmentVariable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvironmentVariable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentVariable) ProtoMessage() {}

func (x *EnvironmentVariable) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentVariable.ProtoReflect.Descriptor instead.
func (*EnvironmentVariable) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{10}
}

func (x *EnvironmentVariable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnvironmentVariable) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{11}
}

func (x *Version) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type VersionInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionInfoList []*VersionInfo `protobuf:"bytes,1,rep,name=version_info_list,json=versionInfoList,proto3" json:"version_info_list,omitempty"`
}

func (x *VersionInfoList) Reset() {
	*x = VersionInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfoList) ProtoMessage() {}

func (x *VersionInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfoList.ProtoReflect.Descriptor instead.
func (*VersionInfoList) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{12}
}

func (x *VersionInfoList) GetVersionInfoList() []*VersionInfo {
	if x != nil {
		return x.VersionInfoList
	}
	return nil
}

type VersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version            string                   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Supported          *VersionSupported        `protobuf:"bytes,2,opt,name=supported,proto3" json:"supported,omitempty"`
	WorkingDirectory   string                   `protobuf:"bytes,3,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`
	WorkerCommand      string                   `protobuf:"bytes,4,opt,name=worker_command,json=workerCommand,proto3" json:"worker_command,omitempty"`
	WorkerQueryCommand string                   `protobuf:"bytes,5,opt,name=worker_query_command,json=workerQueryCommand,proto3" json:"worker_query_command,omitempty"`
	HealthCheckCommand string                   `protobuf:"bytes,6,opt,name=health_check_command,json=healthCheckCommand,proto3" json:"health_check_command,omitempty"`
	EnvvarList         *EnvironmentVariableList `protobuf:"bytes,7,opt,name=envvar_list,json=envvarList,proto3" json:"envvar_list,omitempty"`
	LatestVersion      string                   `protobuf:"bytes,8,opt,name=latest_version,json=latestVersion,proto3" json:"latest_version,omitempty"`
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{13}
}

func (x *VersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionInfo) GetSupported() *VersionSupported {
	if x != nil {
		return x.Supported
	}
	return nil
}

func (x *VersionInfo) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

func (x *VersionInfo) GetWorkerCommand() string {
	if x != nil {
		return x.WorkerCommand
	}
	return ""
}

func (x *VersionInfo) GetWorkerQueryCommand() string {
	if x != nil {
		return x.WorkerQueryCommand
	}
	return ""
}

func (x *VersionInfo) GetHealthCheckCommand() string {
	if x != nil {
		return x.HealthCheckCommand
	}
	return ""
}

func (x *VersionInfo) GetEnvvarList() *EnvironmentVariableList {
	if x != nil {
		return x.EnvvarList
	}
	return nil
}

func (x *VersionInfo) GetLatestVersion() string {
	if x != nil {
		return x.LatestVersion
	}
	return ""
}

type VersionSupported struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *VersionSupported) Reset() {
	*x = VersionSupported{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionSupported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionSupported) ProtoMessage() {}

func (x *VersionSupported) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionSupported.ProtoReflect.Descriptor instead.
func (*VersionSupported) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{14}
}

func (x *VersionSupported) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type TokenList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *TokenList) Reset() {
	*x = TokenList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenList) ProtoMessage() {}

func (x *TokenList) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenList.ProtoReflect.Descriptor instead.
func (*TokenList) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{15}
}

func (x *TokenList) GetTokens() []*Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    string  `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Devices []int32 `protobuf:"varint,2,rep,packed,name=devices,proto3" json:"devices,omitempty"`
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{16}
}

func (x *DeviceInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DeviceInfo) GetDevices() []int32 {
	if x != nil {
		return x.Devices
	}
	return nil
}

// for json
type DeviceInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceInfo []*DeviceInfo `protobuf:"bytes,1,rep,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
}

func (x *DeviceInfoList) Reset() {
	*x = DeviceInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfoList) ProtoMessage() {}

func (x *DeviceInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfoList.ProtoReflect.Descriptor instead.
func (*DeviceInfoList) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{17}
}

func (x *DeviceInfoList) GetDeviceInfo() []*DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupType        GroupType `protobuf:"varint,1,opt,name=group_type,json=groupType,proto3,enum=moreh.sdamanager.GroupType" json:"group_type,omitempty"`
	Id               int32     `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name             string    `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	BackendGroupId   int32     `protobuf:"varint,4,opt,name=backend_group_id,json=backendGroupId,proto3" json:"backend_group_id,omitempty"`
	BackendGroupName string    `protobuf:"bytes,5,opt,name=backend_group_name,json=backendGroupName,proto3" json:"backend_group_name,omitempty"`
	ChildIds         []int32   `protobuf:"varint,6,rep,packed,name=child_ids,json=childIds,proto3" json:"child_ids,omitempty"`
	Values           []string  `protobuf:"bytes,7,rep,name=values,proto3" json:"values,omitempty"`
	Description      string    `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{18}
}

func (x *Group) GetGroupType() GroupType {
	if x != nil {
		return x.GroupType
	}
	return GroupType_BACKEND
}

func (x *Group) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetBackendGroupId() int32 {
	if x != nil {
		return x.BackendGroupId
	}
	return 0
}

func (x *Group) GetBackendGroupName() string {
	if x != nil {
		return x.BackendGroupName
	}
	return ""
}

func (x *Group) GetChildIds() []int32 {
	if x != nil {
		return x.ChildIds
	}
	return nil
}

func (x *Group) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type GroupList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GroupList) Reset() {
	*x = GroupList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupList) ProtoMessage() {}

func (x *GroupList) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupList.ProtoReflect.Descriptor instead.
func (*GroupList) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{19}
}

func (x *GroupList) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type ConnectSDA struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Token token = 2;     erase and reuse 2 when 1.0.2 version not used
	Backendlist []*ConnectBackend `protobuf:"bytes,3,rep,name=backendlist,proto3" json:"backendlist,omitempty"`
}

func (x *ConnectSDA) Reset() {
	*x = ConnectSDA{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectSDA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectSDA) ProtoMessage() {}

func (x *ConnectSDA) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectSDA.ProtoReflect.Descriptor instead.
func (*ConnectSDA) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{20}
}

func (x *ConnectSDA) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectSDA) GetBackendlist() []*ConnectBackend {
	if x != nil {
		return x.Backendlist
	}
	return nil
}

type ConnectBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Ip         string  `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port       string  `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	Devicelist []int32 `protobuf:"varint,5,rep,packed,name=devicelist,proto3" json:"devicelist,omitempty"`
}

func (x *ConnectBackend) Reset() {
	*x = ConnectBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectBackend) ProtoMessage() {}

func (x *ConnectBackend) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectBackend.ProtoReflect.Descriptor instead.
func (*ConnectBackend) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{21}
}

func (x *ConnectBackend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConnectBackend) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConnectBackend) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ConnectBackend) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *ConnectBackend) GetDevicelist() []int32 {
	if x != nil {
		return x.Devicelist
	}
	return nil
}

type Configure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module        ServerModule `protobuf:"varint,1,opt,name=module,proto3,enum=moreh.sdamanager.ServerModule" json:"module,omitempty"`
	Name          string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value         string       `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	DefaultValue  string       `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	MutableModify bool         `protobuf:"varint,5,opt,name=mutable_modify,json=mutableModify,proto3" json:"mutable_modify,omitempty"`
}

func (x *Configure) Reset() {
	*x = Configure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdamanager_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configure) ProtoMessage() {}

func (x *Configure) ProtoReflect() protoreflect.Message {
	mi := &file_sdamanager_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configure.ProtoReflect.Descriptor instead.
func (*Configure) Descriptor() ([]byte, []int) {
	return file_sdamanager_common_proto_rawDescGZIP(), []int{22}
}

func (x *Configure) GetModule() ServerModule {
	if x != nil {
		return x.Module
	}
	return ServerModule_NONE_MODULE
}

func (x *Configure) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Configure) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Configure) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Configure) GetMutableModify() bool {
	if x != nil {
		return x.MutableModify
	}
	return false
}

var File_sdamanager_common_proto protoreflect.FileDescriptor

var file_sdamanager_common_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x6f, 0x72, 0x65, 0x68,
	0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a,
	0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x0b, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x20, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe2, 0x05, 0x0a, 0x05, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d,
	0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x64,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x64, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f,
	0x73, 0x64, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6d, 0x61, 0x78, 0x53, 0x64, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x0b,
	0x65, 0x6e, 0x76, 0x76, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x65, 0x6e,
	0x76, 0x76, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x11, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x0e,
	0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x34, 0x0a,
	0x14, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52,
	0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f,
	0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74,
	0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0e, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x18, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x76,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x6f,
	0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x15, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x6f, 0x6c,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x2d, 0x0a,
	0x0a, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x17,
	0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x76, 0x61,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e,
	0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x06,
	0x65, 0x6e, 0x76, 0x76, 0x61, 0x72, 0x22, 0x3f, 0x0a, 0x13, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5c, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x11, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73,
	0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x94, 0x03, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x40, 0x0a, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x09, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x4a, 0x0a, 0x0b, 0x65, 0x6e,
	0x76, 0x76, 0x61, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x65, 0x6e, 0x76, 0x76,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a,
	0x10, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x3a, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68,
	0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x3a, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x09, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68,
	0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x60, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x53, 0x44, 0x41, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d,
	0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x0b,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x0e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x73, 0x64, 0x61, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x75,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x2a, 0x9e, 0x04, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x47, 0x50, 0x55,
	0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f,
	0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10,
	0x07, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x53,
	0x44, 0x41, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x5f, 0x53, 0x44, 0x41, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x52,
	0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x54, 0x5f,
	0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x4a, 0x4f, 0x42, 0x49, 0x44, 0x10, 0x0d, 0x12, 0x11, 0x0a, 0x0d, 0x44,
	0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x0e, 0x12, 0x0d,
	0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0f, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x10, 0x12,
	0x17, 0x0a, 0x13, 0x4e, 0x4f, 0x54, 0x5f, 0x48, 0x41, 0x56, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x11, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x12, 0x12, 0x0d, 0x0a, 0x09, 0x4a,
	0x4f, 0x42, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x13, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x44,
	0x41, 0x5f, 0x49, 0x53, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x14, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x44, 0x41, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x15, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x44, 0x41, 0x5f, 0x49, 0x53, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x16, 0x12,
	0x17, 0x0a, 0x0f, 0x49, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x5f, 0x53,
	0x44, 0x41, 0x10, 0x17, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x53, 0x5f, 0x4d,
	0x55, 0x4c, 0x54, 0x49, 0x5f, 0x53, 0x44, 0x41, 0x10, 0x18, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x53,
	0x5f, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x10, 0x19, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x58, 0x49, 0x53, 0x54, 0x5f, 0x44, 0x55, 0x50,
	0x4c, 0x49, 0x43, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x4a, 0x4f, 0x42, 0x10, 0x1a, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x44, 0x41, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45,
	0x10, 0x1b, 0x2a, 0x41, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x41, 0x43, 0x4b, 0x45, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x53, 0x44, 0x41, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x55,
	0x53, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53,
	0x48, 0x49, 0x50, 0x10, 0x03, 0x2a, 0x87, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x4e, 0x45, 0x5f, 0x4d,
	0x4f, 0x44, 0x55, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x52, 0x45, 0x48,
	0x5f, 0x53, 0x44, 0x41, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x49, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x4f, 0x52, 0x45, 0x48, 0x5f, 0x53, 0x44, 0x41, 0x4d, 0x41,
	0x4e, 0x41, 0x47, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x4d, 0x4f, 0x52, 0x45, 0x48, 0x5f, 0x53, 0x44, 0x41, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45, 0x52,
	0x5f, 0x53, 0x43, 0x48, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x4f, 0x52, 0x45, 0x48,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x42,
	0x26, 0x5a, 0x24, 0x6d, 0x6f, 0x72, 0x65, 0x68, 0x2e, 0x69, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdamanager_common_proto_rawDescOnce sync.Once
	file_sdamanager_common_proto_rawDescData = file_sdamanager_common_proto_rawDesc
)

func file_sdamanager_common_proto_rawDescGZIP() []byte {
	file_sdamanager_common_proto_rawDescOnce.Do(func() {
		file_sdamanager_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdamanager_common_proto_rawDescData)
	})
	return file_sdamanager_common_proto_rawDescData
}

var file_sdamanager_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sdamanager_common_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_sdamanager_common_proto_goTypes = []interface{}{
	(ResponseCode)(0),               // 0: moreh.sdamanager.ResponseCode
	(GroupType)(0),                  // 1: moreh.sdamanager.GroupType
	(ServerModule)(0),               // 2: moreh.sdamanager.ServerModule
	(*Empty)(nil),                   // 3: moreh.sdamanager.Empty
	(*Boolean)(nil),                 // 4: moreh.sdamanager.Boolean
	(*Integer)(nil),                 // 5: moreh.sdamanager.Integer
	(*StdoutMessage)(nil),           // 6: moreh.sdamanager.StdoutMessage
	(*ConnectedCount)(nil),          // 7: moreh.sdamanager.ConnectedCount
	(*ShutdownKey)(nil),             // 8: moreh.sdamanager.ShutdownKey
	(*Priority)(nil),                // 9: moreh.sdamanager.Priority
	(*Token)(nil),                   // 10: moreh.sdamanager.Token
	(*FrontendID)(nil),              // 11: moreh.sdamanager.FrontendID
	(*EnvironmentVariableList)(nil), // 12: moreh.sdamanager.EnvironmentVariableList
	(*EnvironmentVariable)(nil),     // 13: moreh.sdamanager.EnvironmentVariable
	(*Version)(nil),                 // 14: moreh.sdamanager.Version
	(*VersionInfoList)(nil),         // 15: moreh.sdamanager.VersionInfoList
	(*VersionInfo)(nil),             // 16: moreh.sdamanager.VersionInfo
	(*VersionSupported)(nil),        // 17: moreh.sdamanager.VersionSupported
	(*TokenList)(nil),               // 18: moreh.sdamanager.TokenList
	(*DeviceInfo)(nil),              // 19: moreh.sdamanager.DeviceInfo
	(*DeviceInfoList)(nil),          // 20: moreh.sdamanager.DeviceInfoList
	(*Group)(nil),                   // 21: moreh.sdamanager.Group
	(*GroupList)(nil),               // 22: moreh.sdamanager.GroupList
	(*ConnectSDA)(nil),              // 23: moreh.sdamanager.ConnectSDA
	(*ConnectBackend)(nil),          // 24: moreh.sdamanager.ConnectBackend
	(*Configure)(nil),               // 25: moreh.sdamanager.Configure
}
var file_sdamanager_common_proto_depIdxs = []int32{
	9,  // 0: moreh.sdamanager.Token.priority:type_name -> moreh.sdamanager.Priority
	12, // 1: moreh.sdamanager.Token.envvar_list:type_name -> moreh.sdamanager.EnvironmentVariableList
	5,  // 2: moreh.sdamanager.Token.max_duplicates:type_name -> moreh.sdamanager.Integer
	4,  // 3: moreh.sdamanager.Token.fault_tolerance:type_name -> moreh.sdamanager.Boolean
	12, // 4: moreh.sdamanager.Token.fault_tolerance_env_list:type_name -> moreh.sdamanager.EnvironmentVariableList
	13, // 5: moreh.sdamanager.EnvironmentVariableList.envvar:type_name -> moreh.sdamanager.EnvironmentVariable
	16, // 6: moreh.sdamanager.VersionInfoList.version_info_list:type_name -> moreh.sdamanager.VersionInfo
	17, // 7: moreh.sdamanager.VersionInfo.supported:type_name -> moreh.sdamanager.VersionSupported
	12, // 8: moreh.sdamanager.VersionInfo.envvar_list:type_name -> moreh.sdamanager.EnvironmentVariableList
	10, // 9: moreh.sdamanager.TokenList.tokens:type_name -> moreh.sdamanager.Token
	19, // 10: moreh.sdamanager.DeviceInfoList.device_info:type_name -> moreh.sdamanager.DeviceInfo
	1,  // 11: moreh.sdamanager.Group.group_type:type_name -> moreh.sdamanager.GroupType
	21, // 12: moreh.sdamanager.GroupList.groups:type_name -> moreh.sdamanager.Group
	24, // 13: moreh.sdamanager.ConnectSDA.backendlist:type_name -> moreh.sdamanager.ConnectBackend
	2,  // 14: moreh.sdamanager.Configure.module:type_name -> moreh.sdamanager.ServerModule
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_sdamanager_common_proto_init() }
func file_sdamanager_common_proto_init() {
	if File_sdamanager_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sdamanager_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdoutMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Priority); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentVariableList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvironmentVariable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionSupported); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectSDA); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdamanager_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdamanager_common_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sdamanager_common_proto_goTypes,
		DependencyIndexes: file_sdamanager_common_proto_depIdxs,
		EnumInfos:         file_sdamanager_common_proto_enumTypes,
		MessageInfos:      file_sdamanager_common_proto_msgTypes,
	}.Build()
	File_sdamanager_common_proto = out.File
	file_sdamanager_common_proto_rawDesc = nil
	file_sdamanager_common_proto_goTypes = nil
	file_sdamanager_common_proto_depIdxs = nil
}
